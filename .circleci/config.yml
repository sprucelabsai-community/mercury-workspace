version: 2.1
orbs:
  hub: yasuhiroki/hub@0.0.2
jobs:
  test:
    docker:
      - image: circleci/node:12
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - checkout
      - run:
          name: "Check and skip if npm-publish"
          command: |
            COMMIT_MSG=$(git log --format=oneline -n 1 $CIRCLE_SHA1)
            if [[ $COMMIT_MSG == *"[npm-publish]"* ]]; then
              echo "[npm-publish] detected. No publish necessary ðŸ‘Š"
              circleci-agent step halt
            fi
      - run: node -v && npm -v && yarn -v
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: yarn clean
      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - run: yarn build
      - run: yarn test
      - save_cache:
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Check branch for auto-upgrade
          command: |
            if [[ ${CIRCLE_BRANCH} != "upgrade-"* ]]; then
              circleci-agent step halt
            fi
      - run:
          name: Merge auto-upgrade into master
          command: |
            git config --global user.email "$GIT_AUTHOR_EMAIL"
            git config --global user.name "$GIT_AUTHOR_NAME"
            git fetch --all
            git checkout master
            git reset --hard origin/master
            git merge --no-ff ${CIRCLE_BRANCH} -m "chore(auto-upgrade): Upgrade Tests Passed [auto-merge]"
            git push origin
  npm_publish:
    docker:
      - image: circleci/node:12
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - checkout
      - run:
          name: "Check and skip if npm-publish"
          command: |
            COMMIT_MSG=$(git log --format=oneline -n 1 $CIRCLE_SHA1)
            if [[ $COMMIT_MSG == *"[npm-publish]"* ]]; then
              echo "[npm-publish] detected. No publish necessary ðŸ‘Š"
              circleci-agent step halt
            fi
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile
      - run: yarn run build
      - run: git config --global user.email "$GIT_AUTHOR_EMAIL"
      - run: git config --global user.name "$GIT_AUTHOR_NAME"
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run: 'npm run publish -- --yes --force-publish --dist-tag latest --message "chore(release): %v [npm-publish]"'
  upgrade:
    docker:
      - image: circleci/node:12
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:2e:aa:1f:c9:ab:49:57:8f:c0:cd:2e:5b:f3:b0"
      - checkout
      - hub/install
      - run:
          name: "Set TARGETBRANCH env variable"
          command: |
            TARGETBRANCH=upgrade-$(date '+%Y-%m-%d')
            echo "export TARGETBRANCH=$TARGETBRANCH" >> $BASH_ENV
      - run:
          name: "Try to upgrade"
          command: |
            git checkout -b $TARGETBRANCH || git checkout $TARGETBRANCH
            git reset --hard master
            git config --global user.email "$GIT_AUTHOR_EMAIL"
            git config --global user.name "$GIT_AUTHOR_NAME"
            yarn run upgrade.packages.all
            if [[ $(git status) != *"modified"* ]]; then 
              echo "No modifications detected.  No push/PR necessary ðŸ‘Š"
              circleci-agent step halt
            fi
      - run:
          name: "Create PR"
          command: |
            git commit -a -m "chore(auto-upgrade): upgraded packages [upgrade-all]"
            git push --force origin $TARGETBRANCH
            git push --set-upstream origin $TARGETBRANCH
            echo "$(hub pull-request --base master --head $TARGETBRANCH -m 'Automated Package Upgrade' 2>&1)" |egrep "/pull/|already exists"
workflows:
  version: 2.1
  do_build:
    jobs:
      - test:
          context: public_package_publish
      - npm_publish:
          requires:
            - test
          context: public_package_publish
          filters:
            branches:
              only:
                - master
  upgrade:
    jobs:
      - upgrade:
          context: public_package_publish
    triggers:
      - schedule:
          cron: "10 * * * *"
          filters:
            branches:
              only:
                - master
